{"version":3,"sources":["webpack:///./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js","webpack:///./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/emotion-theming/dist/emotion-theming.browser.esm.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-headroom/dist/index.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/raf/index.js","webpack:///./node_modules/performance-now/lib/performance-now.js","webpack:///./node_modules/node-libs-browser/node_modules/process/browser.js","webpack:///./node_modules/react-headroom/dist/shouldUpdate.js"],"names":["reactPropsRegex","is_prop_valid_browser_esm","Object","memoize_browser_esm","prop","test","charCodeAt","testOmitPropsOnStringTag","testOmitPropsOnComponent","key","getDefaultShouldForwardProp","tag","__webpack_exports__","createStyled","options","identifierName","shouldForwardProp","targetClassName","undefined","label","target","__emotion_forwardProp","propName","isReal","__emotion_real","baseTag","__emotion_base","defaultShouldForwardProp","shouldUseAs","args","arguments","styles","__emotion_styles","slice","push","raw","apply","len","length","i","Styled","core_browser_esm","props","context","ref","react","Consumer","theme","finalTag","as","className","classInterpolations","mergedProps","utils_browser_esm","registered","serialized","serialize_browser_esm","concat","name","finalShouldForwardProp","newProps","_key","innerRef","displayName","defaultProps","defineProperty","value","withComponent","nextTag","nextOptions","object_assign_default","exports","_extends","assign","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","__webpack_require__","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","Menu","_Component","instance","TypeError","_classCallCheck","this","state","isOpen","Error","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","_this","noStateChange","newState","applyWrapperStyles","setState","onStateChange","disableAutoFocus","firstItem","document","querySelector","focus","activeElement","blur","body","timeoutId","clearTimeout","setTimeout","set","applyClass","el","classList","htmlClassName","bodyClassName","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","wrapper","getElementById","builtStyles","getStyle","style","applyOverflow","console","error","index","inline","replace","charAt","toUpperCase","output","width","formattedWidth","right","e","window","event","disableCloseOnEsc","keyCode","toggleMenu","disableOverlayClick","customOnKeyDown","onkeydown","listenForClose","bind","prevProps","morphShape","path","_this2","svg","findDOMNode","lib","select","animate","attr","pathInitial","_this3","createElement","noOverlay","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","tabIndex","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","element","oneOf","func","bool","isRequired","number","module","ThemeProvider","object_assign__WEBPACK_IMPORTED_MODULE_0__","object_assign__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_3__","createCacheWithTheme","outerTheme","getTheme","Provider","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","_shallowequal2","_raf2","_shouldUpdate3","_objectWithoutProperties","keys","indexOf","noop","Headroom","self","ReferenceError","_possibleConstructorReturn","setRef","inner","setHeightOffset","offsetHeight","resizeTicking","getScrollY","pageYOffset","scrollTop","documentElement","parentNode","getViewportHeight","innerHeight","clientHeight","getDocumentHeight","Math","max","scrollHeight","getElementPhysicalHeight","elm","getElementHeight","getScrollerPhysicalHeight","getScrollerHeight","isOutOfBound","currentScrollY","pastTop","scrollerPhysicalHeight","scrollerHeight","handleScroll","scrollTicking","update","handleResize","unpin","onUnpin","translateY","animation","unpinSnap","pin","onPin","unfix","onUnfix","action","lastKnownScrollY","disable","addEventListener","calcHeightOnResize","nextProps","removeEventListener","nextState","_props","userClassName","divProps","disableInlineStyles","fixAnchor","pinAnchor","hideAnchor","hide","instantSnap","content","wrapperStyle","rest","innerStyle","position","top","left","zIndex","WebkitTransform","MsTransform","transform","WebkitTransition","MozTransition","OTransition","transition","wrapperClassName","any","Snap","ReactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","type","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","getOwnPropertyNames","getOwnPropertySymbols","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","b","Symbol","for","c","f","g","h","k","l","m","p","q","r","t","a","u","v","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","_menuFactory","_menuFactory2","overlay","background","opacity","MozTransform","OTransform","menuWrap","menu","boxSizing","overflow","itemList","display","_x","_x2","BurgerIcon","hover","bmBurgerBarsHover","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","bmCross","getCrossStyle","bmCrossButton","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","isArray","Array","toString","idgen","idprefix","timer","now","sta","val","s","ds","dur","B","speed","spd","duration","stopit","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","A","anim","linear","status","stop","time","getById","easeout","pow","easein","Q","sqrt","x","y","abs","backin","backout","sin","PI","bounce","root","w","nodeType","wrap","is","glob","doc","String","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","cacher","scope","postprocessor","newf","arg","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","hex","rgbtoString","toHex","red","green","blue","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","R","G","X","C","V","L","M","parsePathString","pathString","pth","arr","paramCounts","z","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","forEach","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon","objA","objB","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","vendors","suffix","raf","caf","last","_now","cp","cancelled","handle","cancel","polyfill","cancelAnimationFrame","process","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","hr","uptime","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","nextTick","title","browser","env","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","scrollDirection","scrollDown","scrollUp","log","actuion"],"mappings":"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","file":"0-9ec526b46439f7b97c7b.js","sourcesContent":["import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n","import { createElement } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport _objectAssign from 'object-assign';\nimport { withEmotionCache, ThemeContext } from '@emotion/core';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme' && key !== 'innerRef';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var identifierName;\n  var shouldForwardProp;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n    shouldForwardProp = tag.__emotion_forwardProp && options.shouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && // $FlowFixMe\n      options.shouldForwardProp(propName);\n    } : options.shouldForwardProp;\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        styles.push(args[i], args[0][i]);\n      }\n    }\n\n    var Styled = withEmotionCache(function (props, context, ref) {\n      return createElement(ThemeContext.Consumer, null, function (theme) {\n        var finalTag = shouldUseAs && props.as || baseTag;\n        var className = '';\n        var classInterpolations = [];\n        var mergedProps = props;\n\n        if (props.theme == null) {\n          mergedProps = {};\n\n          for (var key in props) {\n            mergedProps[key] = props[key];\n          }\n\n          mergedProps.theme = theme;\n        }\n\n        if (typeof props.className === 'string') {\n          className += getRegisteredStyles(context.registered, classInterpolations, props.className);\n        }\n\n        var serialized = serializeStyles(styles.concat(classInterpolations), context.registered, mergedProps);\n        var rules = insertStyles(context, serialized, typeof finalTag === 'string');\n        className += context.key + \"-\" + serialized.name;\n\n        if (targetClassName !== undefined) {\n          className += \" \" + targetClassName;\n        }\n\n        var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;\n        var newProps = {};\n\n        for (var _key in props) {\n          if (shouldUseAs && _key === 'as') continue;\n\n          if ( // $FlowFixMe\n          finalShouldForwardProp(_key)) {\n            newProps[_key] = props[_key];\n          }\n        }\n\n        newProps.className = className;\n        newProps.ref = ref || props.innerRef;\n\n        if (process.env.NODE_ENV !== 'production' && props.innerRef) {\n          console.error('`innerRef` is deprecated and will be removed in a future major version of Emotion, please use the `ref` prop instead' + (identifierName === undefined ? '' : \" in the usage of `\" + identifierName + \"`\"));\n        }\n\n        var ele = createElement(finalTag, newProps);\n\n        return ele;\n      });\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, nextOptions !== undefined ? _objectAssign({}, options || {}, nextOptions) : options).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n\n      if (!styles) {\n        throw new Error('No styles supplied');\n      }\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          if (!_this.props.disableAutoFocus) {\n            // For accessibility reasons, ensures that when we toggle open,\n            // we focus the first menu item if one exists.\n            if (newState.isOpen) {\n              var firstItem = document.querySelector('.bm-item');\n              if (firstItem) {\n                firstItem.focus();\n              }\n            } else {\n              if (document.activeElement) {\n                document.activeElement.blur();\n              } else {\n                document.body.blur(); // Needed for IE\n              }\n            }\n          }\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        var applyClass = function applyClass(el, className) {\n          return el.classList[set ? 'add' : 'remove'](className);\n        };\n\n        if (this.props.htmlClassName) {\n          applyClass(document.querySelector('html'), this.props.htmlClassName);\n        }\n        if (this.props.bodyClassName) {\n          applyClass(document.querySelector('body'), this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        // Only set overflow-x as an inline style if htmlClassName or\n        // bodyClassName is not passed in. Otherwise, it is up to the caller to\n        // decide if they want to set the overflow style in CSS using the custom\n        // class names.\n        var applyOverflow = function applyOverflow(el) {\n          return el.style['overflow-x'] = set ? 'hidden' : '';\n        };\n        if (!this.props.htmlClassName) {\n          applyOverflow(document.querySelector('html'));\n        }\n        if (!this.props.bodyClassName) {\n          applyOverflow(document.querySelector('body'));\n        }\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        // Close on ESC, unless disabled\n        if (!this.props.disableCloseOnEsc && this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        var wasToggled = typeof this.props.isOpen !== 'undefined' && this.props.isOpen !== this.state.isOpen && this.props.isOpen !== prevProps.isOpen;\n        if (wasToggled) {\n          this.toggleMenu();\n          // Toggling changes SVG animation requirements, so we defer these until the next componentDidUpdate\n          return;\n        }\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style),\n                      tabIndex: _this3.state.isOpen ? 0 : -1\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName,\n                tabIndex: this.state.isOpen ? 0 : -1\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    className: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableAutoFocus: _propTypes2['default'].bool,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    htmlClassName: _propTypes2['default'].string,\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableAutoFocus: false,\n    disableCloseOnEsc: false,\n    htmlClassName: '',\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","import _objectAssign from 'object-assign';\nimport { createElement, forwardRef } from 'react';\nimport { ThemeContext } from '@emotion/core';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _objectAssign({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\n\nvar ThemeProvider = function ThemeProvider(props) {\n  return createElement(ThemeContext.Consumer, null, function (theme) {\n    if (props.theme !== theme) {\n      theme = createCacheWithTheme(theme)(props.theme);\n    }\n\n    return createElement(ThemeContext.Provider, {\n      value: theme\n    }, props.children);\n  });\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n// should we change this to be forwardRef/withCSSContext style so it doesn't merge with props?\nvar withTheme = function withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      return createElement(Component, _extends({\n        theme: theme,\n        ref: ref\n      }, props));\n    });\n  }; // $FlowFixMe\n\n\n  var WithTheme = forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n};\n\nexport { ThemeProvider, withTheme };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldUpdate2 = require('./shouldUpdate');\n\nvar _shouldUpdate3 = _interopRequireDefault(_shouldUpdate2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line import/no-unresolved\n\n\nvar noop = function noop() {};\n\nvar Headroom = function (_Component) {\n  _inherits(Headroom, _Component);\n\n  function Headroom(props) {\n    _classCallCheck(this, Headroom);\n\n    // Class variables.\n    var _this = _possibleConstructorReturn(this, (Headroom.__proto__ || Object.getPrototypeOf(Headroom)).call(this, props));\n\n    _this.setRef = function (ref) {\n      return _this.inner = ref;\n    };\n\n    _this.setHeightOffset = function () {\n      _this.setState({\n        height: _this.inner ? _this.inner.offsetHeight : ''\n      });\n      _this.resizeTicking = false;\n    };\n\n    _this.getScrollY = function () {\n      if (_this.props.parent().pageYOffset !== void 0) {\n        return _this.props.parent().pageYOffset;\n      } else if (_this.props.parent().scrollTop !== void 0) {\n        return _this.props.parent().scrollTop;\n      } else {\n        return (document.documentElement || document.body.parentNode || document.body).scrollTop;\n      }\n    };\n\n    _this.getViewportHeight = function () {\n      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n\n    _this.getDocumentHeight = function () {\n      var body = document.body;\n      var documentElement = document.documentElement;\n\n      return Math.max(body.scrollHeight, documentElement.scrollHeight, body.offsetHeight, documentElement.offsetHeight, body.clientHeight, documentElement.clientHeight);\n    };\n\n    _this.getElementPhysicalHeight = function (elm) {\n      return Math.max(elm.offsetHeight, elm.clientHeight);\n    };\n\n    _this.getElementHeight = function (elm) {\n      return Math.max(elm.scrollHeight, elm.offsetHeight, elm.clientHeight);\n    };\n\n    _this.getScrollerPhysicalHeight = function () {\n      var parent = _this.props.parent();\n\n      return parent === window || parent === document.body ? _this.getViewportHeight() : _this.getElementPhysicalHeight(parent);\n    };\n\n    _this.getScrollerHeight = function () {\n      var parent = _this.props.parent();\n\n      return parent === window || parent === document.body ? _this.getDocumentHeight() : _this.getElementHeight(parent);\n    };\n\n    _this.isOutOfBound = function (currentScrollY) {\n      var pastTop = currentScrollY < 0;\n\n      var scrollerPhysicalHeight = _this.getScrollerPhysicalHeight();\n      var scrollerHeight = _this.getScrollerHeight();\n\n      var pastBottom = currentScrollY + scrollerPhysicalHeight > scrollerHeight;\n\n      return pastTop || pastBottom;\n    };\n\n    _this.handleScroll = function () {\n      if (!_this.scrollTicking) {\n        _this.scrollTicking = true;\n        (0, _raf2.default)(_this.update);\n      }\n    };\n\n    _this.handleResize = function () {\n      if (!_this.resizeTicking) {\n        _this.resizeTicking = true;\n        (0, _raf2.default)(_this.setHeightOffset);\n      }\n    };\n\n    _this.unpin = function () {\n      _this.props.onUnpin();\n\n      _this.setState({\n        translateY: '-100%',\n        className: 'headroom headroom--unpinned',\n        animation: true,\n        state: 'unpinned'\n      });\n    };\n\n    _this.unpinSnap = function () {\n      _this.props.onUnpin();\n\n      _this.setState({\n        translateY: '-100%',\n        className: 'headroom-disable-animation headroom headroom--unpinned',\n        animation: false,\n        state: 'unpinned'\n      });\n    };\n\n    _this.pin = function () {\n      _this.props.onPin();\n\n      _this.setState({\n        translateY: 0,\n        className: 'headroom headroom--pinned',\n        animation: true,\n        state: 'pinned'\n      });\n    };\n\n    _this.unfix = function () {\n      _this.props.onUnfix();\n\n      _this.setState({\n        translateY: 0,\n        className: 'headroom headroom--unfixed',\n        animation: false,\n        state: 'unfixed'\n      });\n    };\n\n    _this.update = function () {\n      _this.currentScrollY = _this.getScrollY();\n\n      if (!_this.isOutOfBound(_this.currentScrollY)) {\n        var _shouldUpdate = (0, _shouldUpdate3.default)(_this.lastKnownScrollY, _this.currentScrollY, _this.props, _this.state),\n            action = _shouldUpdate.action;\n\n        if (action === 'pin' && _this.currentScrollY !== 0) {\n          _this.pin();\n        } else if (action === 'unpin') {\n          _this.unpin();\n        } else if (action === 'unpin-snap') {\n          _this.unpinSnap();\n        } else if (action === 'unfix') {\n          _this.unfix();\n        }\n      }\n\n      _this.lastKnownScrollY = _this.currentScrollY;\n      _this.scrollTicking = false;\n    };\n\n    _this.currentScrollY = 0;\n    _this.lastKnownScrollY = 0;\n    _this.scrollTicking = false;\n    _this.resizeTicking = false;\n    if (props.className == 'content_headroom') {\n      _this.state = {\n        state: 'pinned',\n        translateY: 0,\n        className: 'headroom headroom--pinned'\n      }\n    }else {\n      _this.state = {\n        state: 'unfix',\n        translateY: 0,\n        className: 'headroom headroom--unfixed'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Headroom, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setHeightOffset();\n      if (!this.props.disable) {\n        this.props.parent().addEventListener('scroll', this.handleScroll);\n\n        if (this.props.calcHeightOnResize) {\n          this.props.parent().addEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.disable && !this.props.disable) {\n        this.unfix();\n        this.props.parent().removeEventListener('scroll', this.handleScroll);\n        this.props.parent().removeEventListener('resize', this.handleResize);\n      } else if (!nextProps.disable && this.props.disable) {\n        this.props.parent().addEventListener('scroll', this.handleScroll);\n\n        if (this.props.calcHeightOnResize) {\n          this.props.parent().addEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _shallowequal2.default)(this.props, nextProps) || !(0, _shallowequal2.default)(this.state, nextState);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // If children have changed, remeasure height.\n      if (prevProps.children !== this.props.children) {\n        this.setHeightOffset();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.parent().removeEventListener('scroll', this.handleScroll);\n      window.removeEventListener('scroll', this.handleScroll);\n      this.props.parent().removeEventListener('resize', this.handleResize);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          userClassName = _props.className,\n          divProps = _objectWithoutProperties(_props, ['className']);\n\n      delete divProps.onUnpin;\n      delete divProps.onPin;\n      delete divProps.onUnfix;\n      delete divProps.disableInlineStyles;\n      delete divProps.disable;\n      delete divProps.parent;\n      delete divProps.children;\n      delete divProps.fixAnchor;\n      delete divProps.pinAnchor;\n      delete divProps.hideAnchor;\n      delete divProps.pin;\n      delete divProps.hide;\n      delete divProps.instantSnap;\n      delete divProps.content;\n      delete divProps.calcHeightOnResize;\n\n      var style = divProps.style,\n          wrapperStyle = divProps.wrapperStyle,\n          rest = _objectWithoutProperties(divProps, ['style', 'wrapperStyle']);\n\n      var innerStyle = {\n        position: this.props.disable || this.state.state === 'unfixed' ? 'relative' : 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 1,\n        WebkitTransform: 'translate3D(0, ' + this.state.translateY + ', 0)',\n        MsTransform: 'translate3D(0, ' + this.state.translateY + ', 0)',\n        transform: 'translate3D(0, ' + this.state.translateY + ', 0)'\n      };\n\n      var className = this.state.className;\n\n      // Don't add css transitions until after we've done the initial\n      // negative transform when transitioning from 'unfixed' to 'unpinned'.\n      // If we don't do this, the header will flash into view temporarily\n      // while it transitions from 0 — -100%.\n      if (this.state.animation) {\n        innerStyle = _extends({}, innerStyle, {\n          WebkitTransition: 'all .2s ease-in-out',\n          MozTransition: 'all .2s ease-in-out',\n          OTransition: 'all .2s ease-in-out',\n          transition: 'all .2s ease-in-out'\n        });\n        className += ' headroom--scrolled';\n      }\n\n      if (!this.props.disableInlineStyles) {\n        innerStyle = _extends({}, innerStyle, style);\n      } else {\n        innerStyle = style;\n      }\n\n      var wrapperStyles = _extends({}, wrapperStyle, {\n        height: this.state.height ? this.state.height : null\n      });\n\n      var wrapperClassName = userClassName ? userClassName + ' headroom-wrapper' : 'headroom-wrapper';\n\n      return _react2.default.createElement(\n        'div',\n        { style: wrapperStyles, className: wrapperClassName },\n        _react2.default.createElement(\n          'div',\n          _extends({\n            ref: this.setRef\n          }, rest, {\n            style: innerStyle,\n            className: className\n          }),\n          this.props.children\n        )\n      );\n    }\n  }]);\n\n  return Headroom;\n}(_react.Component);\n\nHeadroom.propTypes = {\n  className: _propTypes2.default.string,\n  parent: _propTypes2.default.func,\n  children: _propTypes2.default.any.isRequired,\n  disableInlineStyles: _propTypes2.default.bool,\n  disable: _propTypes2.default.bool,\n  onPin: _propTypes2.default.func,\n  onUnpin: _propTypes2.default.func,\n  onUnfix: _propTypes2.default.func,\n  wrapperStyle: _propTypes2.default.object,\n  fixAnchor: _propTypes2.default.number,\n  pinAnchor: _propTypes2.default.number,\n  hideAnchor: _propTypes2.default.number,\n  pin: _propTypes2.default.bool,\n  hide: _propTypes2.default.bool,\n  instantSnap: _propTypes2.default.bool,\n  content: _propTypes2.default.bool,\n  style: _propTypes2.default.object,\n  calcHeightOnResize: _propTypes2.default.bool\n};\nHeadroom.defaultProps = {\n  parent: function parent() {\n    return window;\n  },\n  disableInlineStyles: false,\n  disable: false,\n  onPin: noop,\n  onUnpin: noop,\n  onUnfix: noop,\n  wrapperStyle: {},\n  fixAnchor: 0,\n  pinAnchor: 200,\n  hideAnchor: 1500,\n  pin: false,\n  hide: false,\n  instantSnap: false,\n  content: false,\n  calcHeightOnResize: true\n};\nexports.default = Headroom;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar ReactIs = require('react-is');\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextType: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromError: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar FORWARD_REF_STATICS = {\n    '$$typeof': true,\n    render: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true\n};\n\nvar MEMO_STATICS = {\n    '$$typeof': true,\n    compare: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true,\n    type: true\n};\n\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n    if (ReactIs.isMemo(component)) {\n        return MEMO_STATICS;\n    }\n    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') {\n        // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        var targetStatics = getStatics(targetComponent);\n        var sourceStatics = getStatics(sourceComponent);\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.8.6\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return _extends({\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      }, this.state.hover && this.props.styles.bmBurgerBarsHover);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-icon ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover ? 'bm-burger-bars-hover' : '')).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-cross ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            style: buttonStyle,\n            tabIndex: this.props.tabIndex\n          },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object,\n  tabIndex: _propTypes2['default'].number\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {},\n  tabIndex: 0\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  var lastKnownScrollY = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;\n  var currentScrollY = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n  var state = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n  var props = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  var fixAnchor = Math.abs(props.fixAnchor);\n  var pinAnchor = Math.abs(props.pinAnchor);\n  var hideAnchor = Math.abs(props.hideAnchor);\n  var scrollDirection = currentScrollY >= lastKnownScrollY ? 'down' : 'up';\n  var scrollDown = scrollDirection === 'down' \n  var scrollUp = scrollDirection === 'up' \n\n  console.log(\"current scroll:\" + \" \" + currentScrollY);\n\n  // Disable the Header\n  if (props.disable) {\n    return {\n      action: 'none',\n    };\n\n  \n  //  Pin the header: pin={true} hide={false}.\n  } else if (props.pin && props.hide === false) {\n    // Value check to prevent unwanted behaviour.\n    if (fixAnchor > pinAnchor) {\n      fixAnchor = pinAnchor\n    }\n    // Scroll actions.\n    if (currentScrollY >= pinAnchor && scrollDown) {\n      return {\n        action: 'pin',\n      }\n    } else if (currentScrollY <= fixAnchor && scrollUp && state.state !== 'unfixed') {\n      return {\n        action: 'unfix',\n      }\n    // Instant snap is on: instantSnap={true}.\n    } else if (props.instantSnap && scrollUp) {\n      return {\n        action: 'unfix',\n      }\n    } \n    // Scrolling...\n    return {\n      actuion: 'none',\n    }\n\n\n  // Hide the header: pin={false} hide={true}.\n  } else if (props.hide && props.pin === false) {\n    // fixAnchor value check.\n    if (fixAnchor > hideAnchor) {\n      fixAnchor = hideAnchor\n    }\n    // Scroll actions.\n    if (currentScrollY >= hideAnchor && scrollDown) {\n      return {\n        action: 'unpin',\n      }\n    } else if (currentScrollY <= fixAnchor && scrollUp && state.state !== 'unfixed') {\n      return {\n        action: 'unfix',\n      }\n    // Instant snap is on: instantSnap={true}.\n    } else if (props.instantSnap && scrollUp) {\n      return {\n        action: 'unfix',\n      }\n    } \n    // Scrolling...\n    return {\n      actuion: 'none',\n    }\n\n\n  // Pin then hide the header: pin={true} hide={true}\n  } else if (props.pin && props.hide) {\n    // fixAnchor value check.\n    if (pinAnchor > hideAnchor) {\n      pinAnchor = hideAnchor\n    }\n    // Scroll actions.\n    if (currentScrollY >= pinAnchor && scrollDown) {\n      if (currentScrollY >= hideAnchor && scrollDown) {\n        return {\n          action: 'unpin',\n        }\n      }\n      return {\n        action: 'pin',\n      };\n    } else if (currentScrollY <= pinAnchor && scrollUp && state.state !== 'unfixed') {\n      if (currentScrollY <= fixAnchor && scrollUp) {\n        if (props.content) {\n          return {\n            action: 'pin',\n          }\n        }\n      //&& state.state !== 'pinned'\n        return {\n          action: 'unfix',\n        }\n      }\n      return {\n        action: 'pin',\n      }\n    } else if (currentScrollY <= fixAnchor && scrollUp && state.state == 'pinned') {\n      if (props.content) {\n        return {\n          action: 'pin',\n        }\n      }\n      //&& state.state !== 'pinned'\n      return {\n        action: 'unfix',\n      }\n      // Instant snap is on: instantSnap={true}.\n    } else if (props.instantSnap && scrollUp ) {\n      if (state.state == \"unpinned\") {\n        return {\n          action: 'pin',\n        }\n      } else if (state.state == \"pinned\" && currentScrollY <= pinAnchor) {\n        return {\n          action: 'unfix',\n        }\n      }\n    }\n    // Scrollin\n    return {\n      \n      actuion: 'none',\n    }\n  } else {\n    return {\n      action: 'none',\n    }\n  }\n};"],"sourceRoot":""}