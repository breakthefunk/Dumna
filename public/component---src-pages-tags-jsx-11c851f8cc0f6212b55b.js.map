{"version":3,"sources":["webpack:///./src/components/TagsBlock.jsx","webpack:///./src/pages/tags.jsx","webpack:///./src/components/ContentNavBar.jsx","webpack:///./src/components/ContentSpacer.jsx"],"names":["TagsContainer","Object","styled_base_browser_esm","target","props","theme","colors","black","blue","white","grey","light","primary","TagsBlock","_ref","list","core_browser_esm","map","tag","upperTag","charAt","toUpperCase","slice","gatsby_browser_entry","key","to","propTypes","PropTypes","array","Tags","tags","pageContext","Layout","ContentNavBar","ContentSpacer","Container","components_TagsBlock","shape","StyledLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Link","name","styles","Nav","Pinned","document","getElementById","style","opacity","unPinned","unFixed","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react_headroom__WEBPACK_IMPORTED_MODULE_4___default","a","className","disableInlineStyles","pin","hide","content","instantSnap","onPin","onUnpin","onUnfix","fixAnchor","pinAnchor","hideAnchor","id","src","logo","alt","gatsby__WEBPACK_IMPORTED_MODULE_3__","ContentToken"],"mappings":"+KAKMA,EAAgBC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,oHAQN,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,MAR5B,qCAUD,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,MAAMC,MAVjC,qCAaJ,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,MAAME,OAb9B,eAcC,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,QAAQD,OAdrC,WAeH,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,QAAQD,OAfjC,OAoBbE,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBd,OAAAe,EAAA,EAAAf,CAACD,EAAD,KACGe,GACCA,EAAKE,IAAI,SAAAC,GACP,IAAMC,EAAWD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GACzD,OACErB,OAAAe,EAAA,EAAAf,CAACsB,EAAA,KAAD,CAAMC,IAAKN,EAAKO,GAAE,SAAWP,GAC3BjB,OAAAe,EAAA,EAAAf,CAAA,YAAOkB,QAOJN,IAEfA,EAAUa,UAAY,CACpBX,KAAMY,IAAUC,oBClCZC,EAAO,SAAAf,GAAqB,IACxBgB,EADwBhB,EAAlBiB,YACND,KAER,OACE7B,OAAAe,EAAA,EAAAf,CAAC+B,EAAA,EAAD,KACE/B,OAAAe,EAAA,EAAAf,CAACgC,EAAA,EAAD,MACAhC,OAAAe,EAAA,EAAAf,CAACiC,EAAA,EAAD,MACAjC,OAAAe,EAAA,EAAAf,CAACkC,EAAA,EAAD,KACElC,OAAAe,EAAA,EAAAf,CAACmC,EAAD,CAAWrB,KAAMe,OAMVD,YAEfA,EAAKH,UAAY,CACfK,YAAaJ,IAAUU,MAAM,CAC3BP,KAAMH,IAAUC,kHCpBdU,EAAarC,OAAAsC,EAAA,EAAAtC,CAAOuC,OAAP,CAAArC,OAAA,aAAAF,CAAH,CAAAwC,KAAA,SAAAC,OAAA,4FAQVC,EAAM1C,OAAAsC,EAAA,EAAAtC,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAwC,KAAA,SAAAC,OAAA,gtBAmDHE,EAAS,WACXC,SAASC,eAAe,uBAAuBC,MAAMC,QAAU,KAG7DC,EAAW,WACbJ,SAASC,eAAe,uBAAuBC,MAAMC,QAAU,KAE7DE,EAAU,WACZL,SAASC,eAAe,uBAAuBC,MAAMC,QAAU,KA+BpDf,IA5BO,kBAClBhC,OAAAkD,EAAA,EAAAlD,CAACmD,EAAAC,EAAD,CAAUC,UAAU,mBAAmBC,qBAAmB,EAACC,KAAG,EAACC,MAAI,EAACC,SAAO,EAACC,aAAW,EACvFC,MAAOhB,EAAQiB,QAASZ,EAAUa,QAASZ,EAC3Ca,UAAW,IAAKC,UAAW,EAAGC,WAAY,KACtChE,OAAAkD,EAAA,EAAAlD,CAACqC,EAAD,CAAY4B,GAAG,sBAAsBzC,GAAG,KACpCxB,OAAAkD,EAAA,EAAAlD,CAAA,OAAKkE,IAAKC,IAAMC,IAAI,4BAExBpE,OAAAkD,EAAA,EAAAlD,CAAC0C,EAAD,CAAKuB,GAAG,OACJjE,OAAAkD,EAAA,EAAAlD,CAACqE,EAAA,KAAD,CAAM7C,GAAG,KAAT,aAEIxB,OAAAkD,EAAA,EAAAlD,CAAA,aAEJA,OAAAkD,EAAA,EAAAlD,CAACqE,EAAA,KAAD,CAAM7C,GAAG,KAAT,QAEIxB,OAAAkD,EAAA,EAAAlD,CAAA,aAEJA,OAAAkD,EAAA,EAAAlD,CAACqE,EAAA,KAAD,CAAM7C,GAAG,KAAT,UAEIxB,OAAAkD,EAAA,EAAAlD,CAAA,aAEJA,OAAAkD,EAAA,EAAAlD,CAACqE,EAAA,KAAD,CAAM7C,GAAG,KAAT,QAEIxB,OAAAkD,EAAA,EAAAlD,CAAA,sEC/FVsE,QAAYtE,OAAAsC,EAAA,EAAAtC,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAwC,KAAA,UAAAC,OAAA,kBASHR,IALO,kBAClBjC,OAAAkD,EAAA,EAAAlD,CAACsE,EAAD,CAAcL,GAAK","file":"component---src-pages-tags-jsx-11c851f8cc0f6212b55b.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst TagsContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  a {\n    margin: 0 1rem 1rem 0;\n    color: ${props => props.theme.colors.black.blue};\n    padding: 0.3rem 0.6rem;\n    background: ${props => props.theme.colors.white.grey};\n    border-radius: 10px;\n    &:hover {\n      color: ${props => props.theme.colors.white.light};\n      background: ${props => props.theme.colors.primary.light};\n      border: ${props => props.theme.colors.primary.light};\n    }\n  }\n`;\n\nconst TagsBlock = ({ list }) => (\n  <TagsContainer>\n    {list &&\n      list.map(tag => {\n        const upperTag = tag.charAt(0).toUpperCase() + tag.slice(1);\n        return (\n          <Link key={tag} to={`/tags/${tag}`}>\n            <span>{upperTag}</span>\n          </Link>\n        );\n      })}\n  </TagsContainer>\n);\n\nexport default TagsBlock;\n\nTagsBlock.propTypes = {\n  list: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../layouts/Layout';\nimport Container from '../layouts/Container';\nimport ContentNavBar from '../components/ContentNavBar';\nimport TagsBlock from '../components/TagsBlock';\nimport ContentSpacer from '../components/ContentSpacer';\n\nconst Tags = ({ pageContext }) => {\n  const { tags } = pageContext;\n\n  return (\n    <Layout>\n      <ContentNavBar/>\n      <ContentSpacer></ContentSpacer>\n      <Container>\n        <TagsBlock list={tags} />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Tags;\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tags: PropTypes.array,\n  }),\n};\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Headroom from 'react-headroom'\nimport logo from '../../static/logo/logo_default.svg'\n\nconst StyledLink = styled(Link)`\n    position: fixed;\n    display: inline-block;\n    top: -15px;\n    width: 355px;\n    transition: all 0.25s ease-out\n`\n\nconst Nav = styled.nav`\n    position: relative;\n    transform: translateY(45%);\n    display: flex;\n    justify-content: center;\n    font-weight: 500;\n    font-size: 1rem;\n    @media (max-width: 400px) {\n        font-size: 0.8rem;\n    }\n    align-items: center;\n    height: 50px;\n    top: 268px;\n    background: #a92228;\n    width: 100%;\n    padding-left: 20px;\n    padding-right: 20px;\n    a {\n        position: relative;\n        top: 3px;\n        font-family: \"Domine\";\n        color: #f0f0f0;\n        @media (max-width: 500px) {\n            padding-left: 0.7rem;\n            padding-right: 0.7rem;\n        }\n        @media (max-width: 400px) {\n            padding-left: 0.6rem;\n            padding-right: 0.6rem;\n        }\n        padding-left: 1rem;\n        padding-right: 1rem;\n        overflow: hidden;\n        &:hover>div {\n            width: 100%;\n            left: 0%;\n            background-color: #f0f0f0;\n            transition: all 0.45s ease-out;\n        }\n        div {\n            position: relative;\n            height: 1px;\n            width: 0%;\n            top: 0px;\n            left: 50%;\n            background-color: #f0f0f0;\n            transition: all 0.45s ease-out;\n        }\n    }\n`\n\nconst Pinned = function() {\n    document.getElementById(\"content-header-logo\").style.opacity = \"0\";\n};\n\nconst unPinned = function() {\n    document.getElementById(\"content-header-logo\").style.opacity = \"1\";\n};\nconst unFixed = function() {\n    document.getElementById(\"content-header-logo\").style.opacity = \"1\";\n};\n\nconst ContentNavBar = () => (\n    <Headroom className=\"content_headroom\" disableInlineStyles pin hide content instantSnap\n    onPin={Pinned} onUnpin={unPinned} onUnfix={unFixed} \n    fixAnchor={270} pinAnchor={0} hideAnchor={1000} >\n        <StyledLink id=\"content-header-logo\" to=\"/\">\n            <img src={logo} alt='Dumna NiepodlegÅ‚a Logo' />\n        </StyledLink>\n        <Nav id=\"nav\">\n            <Link to='/'>\n                Wydarzenia\n                <div />\n            </Link>\n            <Link to='/'>\n                O nas\n                <div />\n            </Link>\n            <Link to='/'>\n                Kontakt\n                <div />\n            </Link>\n            <Link to='/'>\n                Sklep\n                <div />\n            </Link>\n        </Nav>\n    </Headroom>\n);\n\nexport default ContentNavBar","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst ContentToken  = styled.div`\n    height: 25px;\n`\n\nconst ContentSpacer = () => (\n    <ContentToken id = \"content_spacer\">\n    </ContentToken>\n);\n\nexport default ContentSpacer"],"sourceRoot":""}