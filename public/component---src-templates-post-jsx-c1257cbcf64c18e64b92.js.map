{"version":3,"sources":["webpack:///./src/styles/prism.js","webpack:///./src/layouts/Content.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/components/MainNavBar.jsx","webpack:///./src/components/MainSpacer.jsx","webpack:///./src/images/forest.png"],"names":["prism","css","theme","colors","primary","base","black","light","Wrapper","Object","styled_base_browser_esm","target","props","transitions","default","transition","Content","_ref","input","core_browser_esm","dangerouslySetInnerHTML","__html","propTypes","PropTypes","any","isRequired","SuggestionBar","name","styles","PostSuggestion","Post","data","pageContext","next","prev","post","markdownRemark","html","frontmatter","cover","childImageSharp","fluid","title","date","Layout","MainNavBar","MainSpacer","Container","layouts_Content","gatsby_browser_entry","to","path","shape","object","query","Nav","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Logo","Pinned","unPinned","unFixed","NavBar","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react_headroom__WEBPACK_IMPORTED_MODULE_4___default","a","id","disableInlineStyles","onPin","onUnpin","onUnfix","fixAnchor","pinAnchor","hideAnchor","gatsby__WEBPACK_IMPORTED_MODULE_3__","src","logo_default","alt","MainToken","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-post-jsx-c1257cbcf64c18e64b92.js","sourcesContent":["import { css } from '@emotion/core';\nimport theme from '../../config/theme';\n\nconst prism = css`\n  p > code,\n  li > code {\n    color: #f8f8f2;\n    background: #131316;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    text-align: left;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    padding: 0.4em 0.5em;\n    margin: 0.5em 0;\n    overflow: auto;\n    border-radius: 0.3em;\n    tab-size: 4;\n    hyphens: none;\n  }\n  code[class*='language-'],\n  pre[class*='language-'] {\n    color: #f8f8f2;\n    background: none;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    text-align: left;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    tab-size: 4;\n    hyphens: none;\n  }\n  pre[class*='language-'] {\n    padding: 1em;\n    margin: 1.5rem 0;\n    overflow: auto;\n    border-radius: 0.3em;\n    &::-webkit-scrollbar-thumb {\n      background: ${theme.colors.primary.base};\n    }\n    &::-webkit-scrollbar-track {\n      background: ${theme.colors.black.light};\n    }\n    &::-webkit-scrollbar {\n      width: 12px;\n      height: 12px;\n    }\n  }\n  pre[class*='language-'] {\n    background: #131316;\n  }\n  p > code[class*='language-'],\n  li > code[class*='language-'] {\n    border-radius: 0.3em;\n    background: rgba(52, 152, 219, 0.2);\n    color: #2e3246;\n    bottom: 2px;\n    position: relative;\n  }\n  .token.operator {\n    color: #bc78d7;\n  }\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: slategray;\n  }\n  .token.punctuation {\n    color: #7ad7e2;\n  }\n  .namespace {\n    opacity: 0.7;\n  }\n  .token.property,\n  .token.tag,\n  .token.constant,\n  .token.symbol,\n  .token.deleted {\n    color: #ef514f;\n  }\n  .token.boolean,\n  .token.number {\n    color: #ae81ff;\n  }\n  .token.selector,\n  .token.attr-name,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted {\n    color: #e5db89;\n  }\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string,\n  .token.variable {\n    color: #f8f8f2;\n  }\n  .token.atrule,\n  .token.attr-value,\n  .token.class-name {\n    color: #e6db74;\n  }\n  .token.function {\n    color: #84c16a;\n  }\n\n  .token.keyword {\n    color: #6095ea;\n  }\n  .token.regex,\n  .token.important {\n    color: #fd971f;\n  }\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n  .token.entity {\n    cursor: help;\n  }\n`;\n\nexport default prism;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport prism from '../styles/prism';\n\nconst Wrapper = styled.div`\n  ${prism};\n  p,\n  li {\n    letter-spacing: -0.003em;\n    --baseline-multiplier: 0.179;\n    --x-height-multiplier: 0.35;\n    font-size: 1.15rem;\n    line-height: 2;\n    code {\n      padding: 0.2rem 0.5rem;\n      margin: 0.5rem 0;\n    }\n  }\n  a:not(.gatsby-resp-image-link):not(.anchor) {\n    color: black;\n    box-shadow: inset 0 -2px 0 ${props => props.theme.colors.primary.base};\n    border-bottom: 1px solid ${props => props.theme.colors.primary.base};\n    transition: ${props => props.theme.transitions.default.transition};\n    text-decoration: none;\n    &:hover,\n    &:focus {\n      background: ${props => props.theme.colors.primary.base};\n      color: black;\n    }\n  }\n  h1 {\n    margin-top: 3rem;\n  }\n  h2 {\n    margin-top: 1rem;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    display: inline-block;\n    position: relative;\n    a {\n      box-shadow: none;\n      border-bottom: none;\n      &:hover,\n      &:focus {\n        background: none;\n      }\n    }\n    &:hover {\n      .anchor svg {\n        opacity: 0.8;\n      }\n    }\n  }\n`;\n\nconst Content = ({ input }) => (\n  <Wrapper dangerouslySetInnerHTML={{ __html: input }} />\n);\n\nexport default Content;\n\nContent.propTypes = {\n  input: PropTypes.any.isRequired,\n};\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport Layout from '../layouts/Layout';\nimport Container from '../layouts/Container';\nimport Content from '../layouts/Content';\nimport MainNavBar from '../components/MainNavBar';\nimport MainSpacer from '../components/MainSpacer';\nimport '../styles/prism';\n\nconst SuggestionBar = styled.div`\n  display: flex;\n  @media screen and (min-width: 1000px) {\n    margin-left: 16%;\n    margin-right: 4rem;\n  }\n  margin-left: 2rem;\n  margin-right: 2rem;\n  padding-bottom: 3rem;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n`;\nconst PostSuggestion = styled.div`\n  display: flex;\n  width: 50%;\n  align-items: center;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  line-height: 32px;\n  max-height: 85px;\n`;\n\nconst Post = ({ data, pageContext }) => {\n  const { next, prev } = pageContext;\n  const post = data.markdownRemark;\n  const image = post.frontmatter.cover.childImageSharp.fluid;\n  const title = post.frontmatter.title;\n  const date = post.frontmatter.date;\n  const html = post.html;\n  return (\n    <Layout>\n      <MainNavBar/>\n      <MainSpacer></MainSpacer>\n      <Container>\n        <Content input={html} />\n      </Container>\n      <SuggestionBar>\n        <PostSuggestion>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Poprzednie\n              <h3>{prev.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n        <PostSuggestion>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              NastÄ™pne\n              <h3>{next.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n      </SuggestionBar>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n  }).isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        date\n        title\n        tags\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 1920\n              quality: 90\n            ) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n//<NavBar title={title} date={date} cover={image} />\n//duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Headroom from 'react-headroom'\nimport logo_default from '../../static/logo/logo_default.svg'\n\nconst Nav = styled.nav`\n    position: relative;\n    font-weight: 400;\n    font-size: 1.2rem;\n    height: 50px;\n    background: transparent;\n    float: right;\n    direction: rtl;\n    margin-right: 25%;\n    a {\n        position: relative;\n        font-family: \"Domine\";\n        color: #ac8d64;\n        transition: all 0.25s ease-out\n        width: 100%;\n        display: table;\n        overflow: hidden;\n        div {\n            position: relative;\n            height: 1px;\n            width: 0%;\n            top: 0px;\n            left: 50%;\n            background-color: #dc2830;\n            transition: all 0.45s ease-out;\n        }\n        &:hover>div {\n            width: 100%;\n            left: 0%;\n            background-color: #dc2830;\n            transition: all 0.45s ease-out;\n        }\n    }\n`\nconst Logo = styled.img`\n    position: relative;\n    width: 70%;\n    margin-top: 2rem;\n    left: 50%;\n    transform: translateX(-50%);\n    top: 0px;\n`\n\nconst Pinned = function() {\n};\n\nconst unPinned = function() {\n};\n\nconst unFixed = function() {\n};\n\nconst NavBar = () => (\n    <Headroom id=\"main_headroom\" disableInlineStyles\n    onPin={Pinned} onUnpin={unPinned} onUnfix={unFixed} \n    fixAnchor={0} pinAnchor={0} hideAnchor={150} >\n        <Link id=\"main-header-logo\" to=\"/\">\n            <Logo id=\"logo_default\" src={logo_default} alt='Dumna NiepodlegÅ‚a Logo' />\n        </Link>\n        <Nav id=\"nav\">  \n            <Link to='/'>\n                Wydarzenia\n                <div />\n            </Link>\n            <Link to='/'>\n                O nas\n                <div />\n            </Link>\n            <Link to='/'>\n                Kontakt\n                <div />\n            </Link>\n            <Link to='/'>\n                Sklep\n                <div />\n            </Link>\n        </Nav>\n    </Headroom>\n);\n\nexport default NavBar","import React from 'react'\nimport styled from '@emotion/styled'\nimport theme from '../../config/theme'\nimport forestBackground from '../images/forest.png';\n\nconst MainToken  = styled.div`\n  height: 1rem;\n  position: relative;\n`\nconst MainSpacer = () => (\n    <MainToken id = \"main_spacer\">\n    </MainToken>\n);\n\nexport default MainSpacer\n\n","module.exports = __webpack_public_path__ + \"static/forest-7724b0a823e6ab702e1c5e17322f4c1a.png\";"],"sourceRoot":""}